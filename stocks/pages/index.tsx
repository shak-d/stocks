import Head from 'next/head'
import Link from 'next/link'
import styles from '../styles/Home.module.css'
import stylesUtils from '../styles/utilities.module.css'
import Header from '../components/Header';
import Window from '../components/Window';
import React, { Component } from 'react';
import Montage from '../components/Montage';
import Tape from '../components/Tape';
import nextId from 'react-id-generator';

interface IProps {
}

interface IState {
  windows: WindowElement[];
}

interface WindowElement {
  ticker?: string;
  type: WindowElementType;
}

enum WindowElementType {
  Montage,
  Tape,
  Positions
}


export default class Home extends Component<IProps, IState> {

  constructor(props: IProps) {

    super(props);
    this.state = {
      windows: []
    }
    this.onNewChart = this.onNewChart.bind(this);
    this.onNewTape = this.onNewTape.bind(this);
  }

  private onNewChart() {
    var newState: WindowElement[];
    newState = this.state.windows.slice();
    newState.push({
      ticker: "",
      type: WindowElementType.Montage
    });
    this.setState({ windows: newState });
  }

  private onNewTape(){
    var newState: WindowElement[];
    newState = this.state.windows.slice();
    newState.push({
      ticker: "",
      type: WindowElementType.Tape
    });
    this.setState({ windows: newState });
  }

  private createMontageWindowEement(): JSX.Element {
    return (
      <Window>
        <Montage defaultWindowSize={500} />
      </Window>
    )
  }

  private createTapeWindowElemet() : JSX.Element {

    return (
      <Window key={nextId()}>
        <Tape />
      </Window>
    )
  }

  render() {

    let windows : JSX.Element[] = [];

    this.state.windows.map((item) => {
      if(item.type == WindowElementType.Montage){
        windows.push(this.createMontageWindowEement());
      }
      else if(item.type == WindowElementType.Tape){
        windows.push(this.createTapeWindowElemet());
      }
    });

    return (
      <div className={stylesUtils.h100}>
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
          <link rel="preconnect" href="https://fonts.googleapis.com" />
          <link rel="preconnect" href="https://fonts.gstatic.com" crossOrigin="" />
          <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700;900&display=swap" rel="stylesheet" />
        </Head>
        <Header onNewChartClicked={this.onNewChart} onNewTapeClicked={this.onNewTape} />

        <div className={styles.windowsContainer}>
          {windows}
        </div>

      </div>
    )
  }
}
